<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zwt.example.mapper.LitemallHxUserMapper" >
  <resultMap id="BaseResultMap" type="zwt.example.entity.LitemallHxUser" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nick_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="uuid" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="activated" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="disturbing" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="push_type" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="state" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, password, nick_name, uuid, type, activated, disturbing, push_type, 
    state, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from litemall_hx_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from litemall_hx_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zwt.example.entity.LitemallHxUser" >
    insert into litemall_hx_user (id, user_name, password, 
      nick_name, uuid, type, 
      activated, disturbing, push_type, 
      state, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{uuid,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{activated,jdbcType=CHAR}, #{disturbing,jdbcType=CHAR}, #{pushType,jdbcType=CHAR}, 
      #{state,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="zwt.example.entity.LitemallHxUser" >
    insert into litemall_hx_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="activated != null" >
        activated,
      </if>
      <if test="disturbing != null" >
        disturbing,
      </if>
      <if test="pushType != null" >
        push_type,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="activated != null" >
        #{activated,jdbcType=CHAR},
      </if>
      <if test="disturbing != null" >
        #{disturbing,jdbcType=CHAR},
      </if>
      <if test="pushType != null" >
        #{pushType,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zwt.example.entity.LitemallHxUser" >
    update litemall_hx_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="activated != null" >
        activated = #{activated,jdbcType=CHAR},
      </if>
      <if test="disturbing != null" >
        disturbing = #{disturbing,jdbcType=CHAR},
      </if>
      <if test="pushType != null" >
        push_type = #{pushType,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zwt.example.entity.LitemallHxUser" >
    update litemall_hx_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      activated = #{activated,jdbcType=CHAR},
      disturbing = #{disturbing,jdbcType=CHAR},
      push_type = #{pushType,jdbcType=CHAR},
      state = #{state,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>